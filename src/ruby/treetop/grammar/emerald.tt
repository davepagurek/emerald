#!/usr/bin/env ruby

#
# Context free grammar for the Emerald language.
# Emerald: a preprocessor for html5.
#
grammar Emerald
  include Tokens

  rule main
    (nested / line / comment)* <Root>
  end

  # A nested statement is a tag statement followed by a newline and an
  # a block scoped by braces.
  rule nested
    tag_statement newline lbrace newline test rbrace newline <Nested>
  end

  # Rename this to something better.
  rule test
    (nested / line)+ <Test>
  end

  # Comment has optional newline, so it's not included in the first sequence
  rule line
    (tag_statement / text / list / comment) newline <Line>
  end

  # Rule for keyword list (metas, scripts, styles)
  rule list
    keyword (newline (attr space* string comma? space*)+ )* <List>
  end

  # Single line and multiline comments
  rule comment
    space* '!' ( !"\n" . )* "\n" <Comment> / space* '<!' ( !"!>" . )* "!>\n" <Comment>
  end

  # TODO: add escape characters
  rule string
    '"' ( !'"' . )* '"' <StringNode>
  end

  # Ex. h1 "test this out."
  rule text
    h_num space* string <Text>
  end

  # tag space* string (0 or 1), attr_list (0 or 1)
  rule tag_statement
    tag space* (( !"\n" . )*)? space* attr_list? <TagStatement>
  end

  # attribute list for
  # lparen newline (or none), attribute* rparen
  rule attr_list
    lparen newline attribute* space* rparen <AttributeList>
  end

  # if newline option, must indent
  rule attribute
    space* attr space+ string newline <Attribute>
  end
end
